$samtools --version
>samtools 1.7
>Using htslib 1.7-2
>Copyright (C) 2018 Genome Research Ltd.


#First, a couple of introductory comments. A BAM file contains alignments for a set of input reads.
Each read can have 0(none), 1 or multiple alignments on the genome.

#1 How many alignments does the set contain?
$samtools flagstat athal_wu_0_A.bam
>221372
or
$samtools view athal_wu_0_A.bam | wc -l
>221372
# if you want to remove unmapped reads
$samtools view athal_wu_0_A.bam | cut -f3 | grep -v '*' | wc -l


#2 How many alignments show the read's mate unmapped?
# unmapped is denote as '*' in column 7
$samtools view athal_wu_0_A.bam | cut -f7 | grep -c '*'
>65521


#3 How many alignments contain a deletion(D)?
$samtools view athal_wu_0_A.bam | cut -f6 | grep -c 'D'
>2451


#4 How many alignments show the read's mate mapped to the same chromosome?
# alignments with the read's mate mapped to the same chromosome are marked with a '=' in column 7
$samtools view athal_wu_0_A.bam | cut -f7 | grep -c '='
>150913


#5 How many alignments are spliced?
#A spliced alignment will be marked with an 'N'(intron gap) in the CIGAR field.
$samtools view athal_wu_0_A.bam | cut -f6 | grep -c 'N'
>0


#6 How many alignments does the set contain?
# Contruct the reduced set is needed. Extract from the original set only those alignments in the specified region.
For this, we need to sort and index the file.
$samtools sort -T ~/Downloads/athal_wu_0_A.sorted -o athal_wu_0_A.sorted.bam athal_wu_0_A.bam
# The upon code will create the file athal_wu_0_A.sorted.bam
# Then index this file...
$samtools index athal_wu_0_A.sorted.bam
# This will create the index file athal_wu_0_A.sorted.bam.bai in the current directory.
# Extract alignments in the specified range...
$samtools view -b athal_wu_0_A.sorted.bam "Chr3:11777000-11794000" > athal_wu_0_A.region.bam
# The option -b will generate output in BAM format. The resulting BAM file will be sorted, so it can be indexed directly if needed.
# To determine the number of alignments in the new(region) file......
$samtools flagstat athal_wu_0_A.region.bam
>7081


#7 How many alignments show the read's mate unmapped?
# unmapped is denote as '*' at column 7
$ samtools view athal_wu_0_A.region.bam | cut -f7 | grep -c '*'
>1983


#8 How many alignments contain a deletion (D)?
$samtools view athal_wu_0_A.region.bam | cut -f6 | grep -c 'D'
>31


#9 How many alignments show the read's mate mapped to the same chromosome?
$samtools view athal_wu_0_A.region.bam | cut -f7 | grep -c '='
>4670


#10 How many alignments are spliced?
$samtools view athal_wu_0_A.bam | cut -f6 | grep -c 'N'
>0


#11 How many sequences are in the genome file?
#This information can be found in the header of the BAM file. 
#Starting with the original BAM file, we use samtools to display the header information and count the number of lines describing the sequences 
#in the reference genome:
$samtools view -H athal_wu_0_A.bam | grep -c "SN:"
>7


#12 What is the length of the first sequence in the genome file?
# The length information is sorted alongside the sequence identifier in the header (pattern 'LN:seq_length')
$samtools view -H athal_wu_0_A.bam | grep "SN:" | more
>29923332


(x)#13 What alignment tool was used?
>samtools


(x)#14 What is the read identifier (name) for the first alignment?
$samtools view athal_wu_0_A.bam | more
>GAII05_0002:1:113:7822:3886#0


(x)#15 What is the start position of this read's mate on the genome? Give this as 'chrom:pos' if the read was mapped, or '*' if unmapped.
>11700332




$bedtools --version
>bedtools v2.26.0

#16 How many overlaps (each overlap is reported on one line) are reported?
#We start by running BEDtools on the alignment set restricted to the specified region (Chr3:11777000-11794000) and the GTF annotation file listed above. 
#To allow the input to be read directly from the BAM file, we use the option ．-abam・; in this case we will need to also specify ．-bed・ for the BAM alignment 
#information to be shown in BED column format in the output:
$bedtools intersect -abam athal_wu_0_A.region.bam -b athal_wu_0_A_annot.gtf -bed -wo > overlaps.bed

#This will create a file with the following format: Columns 1-12 : alignment information, converted to BED format Columns 13-21 : annotation (exon) information, 
#from the GTF file Column 22 : length of the overlapAlternatively, we could first convert the BAM file to BED format using ．bedtools bamtobed・ 
#then use the resulting file in the ．bedtools intersect・ command. To answer the question, the number of overlaps reported is precisely the number of lines in 
#the file (because only entries in the first file that have overlaps in file B are reported, according to the option ．-wo・):
$wc -l overlaps.bed
>3101 overlaps.bed



(x)#17 How many of these are 10 bases or longer?
#The size of the overlap is listed in column 22 of the ．overlaps.bed・ file. To determine those longer than 10 bases, we extract the column, 
#sort numerically in decreasing order, and simply determine by visual inspection of the file the number of such records. For instance, in ．vim・ 
#we search for the first line listing ．9・ (．:/9・), then determine its line number (Ctrl+g). Alternatively, one can use grep with option ．-n・ to list 
#the lines and corresponding line numbers:
$cut -f22 overlaps.bed | sort -n | grep -c '^9'
>25

#18 How many alignments overlap the annotations?
#column 1-12 define the alignments
#Potential pitfalls: Multiple reads may map at the same coordinates, so the information in columns 1-3 is insufficient. The minimum information needed to 
#define the alignments is contained in columns 1-5, which include the read ID and the flag, specifying whether this is read 1 or read 2 in a pair with the 
#same read ID).
$cut -f1-12 overlaps.bed | sort -u | wc -l
>3101


#19 Conversely, how many exons have reads mapped to them?
#columns 13-21 define the exons
$cut -f13-21 overlaps.bed | sort -u | wc -l
>21


#20 If you were to convert the transcript annotations in the file "athal_wu_0_A_annot.gtf" into BED format, how many BED records would be generated?
#This question simply asks for the number of transcripts in the annotation file, since the BED format would represent each transcript on one line. 
#This information can be obtained from column 9 in the GTF file:
$cut -f9 athal_wu_0_A.annot.gtf | cut -d '' -f1,2 | sort -u | wc -l
>4
 